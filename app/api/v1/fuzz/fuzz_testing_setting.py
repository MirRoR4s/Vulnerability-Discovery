from fastapi import APIRouter, Request
from ....common.jwt import DependsJwtAuth
from ....common.response.response_schema import response_base
from ....services.fuzz_test_suite_service import FuzzTestSuiteService
from ....services.fuzz_test_case_service import FuzzTestCaseService
from ....utils.helper_output import sqlalchemy_list2dict
from ....schemas.fuzz_test_suite_schema import SuiteTemplateSchema

router = APIRouter()


@router.get('/read/cases', summary="读取系统模糊测试用例库", dependencies=[DependsJwtAuth])
async def read_case_library(request: Request):
    """
    - 模糊测试用例库：多个模糊测试套件组成的集合
    """
    suites: list = await FuzzTestSuiteService.read_all_suites(request)
    # 将包含 sqlalchemy 对象的列表转换为字典
    data = sqlalchemy_list2dict(suites)
    return await response_base.success(data=data)

@router.post('/create/template', summary='将选择的多个测试用例加入模板库中', dependencies=[DependsJwtAuth])
async def add_suite(request: Request, suite_schema: SuiteTemplateSchema):
    """
    - 新建模糊测试套件并加入模板库，该操作简称为创建测试套件模板
    """
    await FuzzTestCaseService.read_template_cases(suite_schema.cases_name)
    await FuzzTestSuiteService.create_template(request, suite_schema)
    return await response_base.success()

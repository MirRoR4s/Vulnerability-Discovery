#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from typing import Annotated

from fastapi import APIRouter, Body, Path, Request

from backend.app.common.jwt import DependsJwtAuth
from backend.app.common.rbac import DependsRBAC
from backend.app.common.response.response_code import CustomResponseCode
from backend.app.common.response.response_schema import response_base
from backend.app.services.fuzz_test_group_service import FuzzTestGroupService
from backend.app.schemas.fuzz_test import *

router = APIRouter()


@router.post('/add/group', summary='新增模糊测试用例组', dependencies=[DependsJwtAuth])
async def add_group(request: Request, group: CreateGroupSchema):
    user_id = request.user.id
    FuzzTestGroupService.create_group(user_id, **dict(group))
    return await response_base.success()

@router.post('/add/case', summary='新增模糊测试用例', dependencies=[DependsJwtAuth])
async def add_case(request: Request, case: CreateCase):
    pass


@router.post('/add/primitive', summary='新增原语', dependencies=[DependsJwtAuth])
async def add_primitive(request: Request, primitive: Static):
    pass
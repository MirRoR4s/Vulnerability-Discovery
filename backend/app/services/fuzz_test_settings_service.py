from typing import List

from fastapi import Request

from backend.app.crud.crud_case_group import CASEGROUPDAO
from backend.app.crud.crud_system_case_group import SYSTEMCASEGROUPDAO
from backend.app.database.db_mysql import async_db_session

class FuzzTestSettingsService:
    """
    Service for handling fuzz test settings
    
    1. 读取用例库下所有用例组,包括用户的和系统内置的
    2. 读取用例库下某用例组的所有用例(传入用例库的名称)
    3. 向测试套件模板库添加测试套件集合(传入测试套件集合的名称和描述以及该集合下所有测试用例的名称)
    4. 读取测试套件模板库的所有模板 (传入测试套件模板库的名称)
    5. 读取模板下的所有测试用例 
    6. 编辑模板下某个测试用例
    """
    @staticmethod
    async def read_case_library(request: Request) -> list:
        """
        Read all case libraries.

        :param request: The request.
        :return: The case libraries.
        """
        user_id = request.user.id
        async with async_db_session.begin() as db:
            # # 读取用户的所有用例组
            # user_groups = await CASEGROUPDAO.read_groups(db, user_id)
            # # 读取系统的所有用例组
            # system_groups = await SYSTEMCASEGROUPDAO.read_groups(db)
            # # 合并用例组
            # groups = user_groups + system_groups
            groups = await SYSTEMCASEGROUPDAO.read_groups(db)
            return groups
    
    @staticmethod
    async def read_cases(request: Request, group_name) -> List:
        """
        _summary_

        :param request: _description_
        :param group_name: _description_
        :return: _description_
        """
        pass

    


from typing import Sequence
from sqlalchemy import and_, asc, or_, select
from sqlalchemy.ext.asyncio import AsyncSession

from backend.app.crud.base import CRUDBase
from backend.app.models import Case
from backend.app.schemas.fuzz_test import UpdateCase, CreateCase


class CRUDCase(CRUDBase[Case, CreateCase, UpdateCase]):
    
    
    async def create_case(self, db: AsyncSession, user_id:int, create_group: CreateCase) -> None:
        """
        创建一个名为name,描述为desc的模糊测试用例

        :param db: _description_
        :param name: _description_
        :param desc: _description_, defaults to None
        """
        self.create_(db, create_group, user_id)
        
        
    async def read_case(self, db: AsyncSession, name: str) -> Case | None:
        """
        读取一个名为name的模糊测试用例.

        :param db: _description_
        :param name: _description_
        :return: _description_
        """
    
    async def update_desc(self, db: AsyncSession, old_name: str, new_name: str, new_desc: str = None) -> None:
        """
        将名为old_name,描述为old_desc的模糊测试用例的名称和描述改为new_name和new_desc.

        :param db: _description_
        :param new_name: _description_
        :param new_desc: _description_, defaults to None
        """
        
    
    async def delete_case(self, db: AsyncSession, name: str) -> None:
        """
        删除名为name的模糊测试用例.

        :param db: _description_
        :param name: _description_
        """

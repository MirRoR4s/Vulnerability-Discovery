
from typing import Sequence
from sqlalchemy import and_, asc, or_, select
from sqlalchemy.ext.asyncio import AsyncSession

from backend.app.crud.base import CRUDBase
from backend.app.models import Primitive
from backend.app.schemas.fuzz_test import UpdatePrimitive, CreatePrimitive


class CRUDPrimitive(CRUDBase[Primitive, CreatePrimitive, UpdatePrimitive]):
    
    
    async def create_primitive(self, db: AsyncSession, user_id:int, create_group: CreatePrimitive) -> None:
        """
        创建一个名为name,描述为desc的模糊测试原语

        :param db: _description_
        :param name: _description_
        :param desc: _description_, defaults to None
        """
        self.create_(db, create_group, user_id)

    async def read_primitive(self, db: AsyncSession, name: str) -> Primitive | None:
        """
        返回一个名为name的模糊测试原语的各项属性，如名称、默认值等.

        :param db: _description_
        :param name: _description_
        :return: _description_
        """

    async def update_desc(self, db: AsyncSession, old_name: str, new_name: str, new_desc: str = None) -> None:
        """
        将名为old_name,描述为old_desc的模糊测试用例的名称和描述改为new_name和new_desc.

        :param db: _description_
        :param new_name: _description_
        :param new_desc: _description_, defaults to None
        """

    async def delete_primitive(self, db: AsyncSession, name: str) -> None:
        """
        删除名为name的模糊测试原语.

        :param db: _description_
        :param name: _description_
        """
